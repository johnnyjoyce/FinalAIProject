FUNCTION_BLOCK rules	// Block definition (there may be more than one block per file)

	VAR_INPUT				// Define input variables
		hit : REAL;
		lifeforce : REAL;
	END_VAR
	
	VAR_OUTPUT				// Define output variable
		health : REAL;
	END_VAR
	
	FUZZIFY hit			
		TERM poor := (0, 1) (4, 0) ; 
		TERM good := (1, 0) (4,1) (6,1) (9,0);
		TERM excellent := (6, 0) (9, 1);
	END_FUZZIFY
	
	FUZZIFY lifeforce		
		TERM bad := (0, 1) (4, 0) ; 
		TERM ok := (1, 0) (4,1) (6,1) (9,0);
		TERM superior := (6, 0) (9, 1);
	END_FUZZIFY
	
	DEFUZZIFY health			
		TERM low := (0,0) (5,1) (10,0);
		TERM average := (10,0) (15,1) (20,0);
		TERM high := (20,0) (25,1) (30,0);
		METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
		DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
	END_DEFUZZIFY
	
	RULEBLOCK No1
		AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
		ACT : MIN;			// Use 'min' activation method
		ACCU : MAX;			// Use 'max' accumulation method
	
		RULE 1 : IF hit IS poor AND lifeforce IS superior THEN health IS high;
		RULE 2 : IF hit IS good AND lifeforce IS ok THEN health IS average; 
		RULE 3 : IF hit IS excellent AND lifeforce IS bad THEN health IS low;
	END_RULEBLOCK

END_FUNCTION_BLOCK
